{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "poolSubscriptionID": {
      "type": "string"
    },
    "poolResourceGroup": {
      "type": "string"
    },
    "poolServerName": {
      "type": "string",
	  "metadata": {
      "description": "Do NOT include .database.windows.net"
	  }
    },
    "poolDatabaseName_AllCaps": { 
      "type": "string",
	  "metadata": {
      "description": "Database name should be in ALL CAPS"
	  }
    },
    "region": {
      "type": "string"
    },
    "LASubscriptionID": {
      "type": "string"
    },
    "LAResourceGroup": {
      "type": "string"
    },
    "LAWorkspaceName": {
      "type": "string"
    },
    "dashboardName": {
      "type": "string"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "lenses": {
          "0": {
            "order": 0,
            "parts": {
              "0": {
                "position": {
                  "x": 0,
                  "y": 0,
                  "colSpan": 13,
                  "rowSpan": 5
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    },
                    {
                      "name": "options",
                      "value": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "dwu_consumption_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "DWU percentage"
                              }
                            },
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "cpu_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "CPU percentage"
                              }
                            },                            
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "physical_data_read_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Data IO percentage"
                              }
                            },
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "local_tempdb_usage_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Local tempdb percentage"
                              }
                            }
                          ],
                          "title": "Resource Utilization",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            }
                          },
                          "timespan": {
                            "relative": {
                              "duration": 86400000
                            },
                            "showUTCTime": false,
                            "grain": 1
                          }
                        }
                      },
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "dwu_consumption_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "DWU percentage"
                              }
                            },
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "cpu_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "CPU percentage"
                              }
                            },
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "physical_data_read_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Data IO percentage"
                              }
                            }
                          ],
                          "title": "Resource Utilization",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "1": {
                "position": {
                  "x": 13,
                  "y": 0,
                  "colSpan": 13,
                  "rowSpan": 5
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    },
                    {
                      "name": "options",
                      "value": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "active_queries",
                              "aggregationType": 1,
                              "metricVisualization": {
                                "resourceDisplayName": "parameters('poolDatabaseName_AllCaps')"
                              }
                            },
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "queued_queries",
                              "aggregationType": 1,
                              "metricVisualization": {
                                "resourceDisplayName": "parameters('poolDatabaseName_AllCaps')"
                              }
                            }
                          ],
                          "title": "Active and queued queries",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 1
                          },
                          "openBladeOnClick": {
                            "openBlade": true
                          }
                        }
                      },
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "active_queries",
                              "aggregationType": 1,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Active queries",
                                "color": "#08781f",
                                "resourceDisplayName": "parameters('poolDatabaseName_AllCaps')"
                              }
                            },
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "queued_queries",
                              "aggregationType": 1,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Queued queries",
                                "color": "#c70407",
                                "resourceDisplayName": "parameters('poolDatabaseName_AllCaps')"
                              }
                            }
                          ],
                          "title": "Active and queued queries",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 1,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "2": {
                "position": {
                  "x": 0,
                  "y": 5,
                  "colSpan": 13,
                  "rowSpan": 5
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    },
                    {
                      "name": "options",
                      "value": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "local_tempdb_usage_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Local tempdb percentage"
                              }
                            }
                          ],
                          "title": "TempDB utilization",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            }
                          },
                          "timespan": {
                            "relative": {
                              "duration": 86400000
                            },
                            "showUTCTime": false,
                            "grain": 1
                          }
                        }
                      },
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "local_tempdb_usage_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Local tempdb percentage"
                              }
                            }
                          ],
                          "title": "TempDB utilization",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 3,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "3": {
                "position": {
                  "x": 13,
                  "y": 5,
                  "colSpan": 13,
                  "rowSpan": 5
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    },
                    {
                      "name": "options",
                      "value": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "wlg_allocation_relative_to_system_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Workload group allocation by system percent"
                              }
                            }
                          ],
                          "title": "Workload Group Allocation",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 1,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            }
                          },
                          "grouping": {
                            "dimension": "WorkloadGroupName",
                            "sort": 2,
                            "top": 20
                          },
                          "timespan": {
                            "relative": {
                              "duration": 14400000
                            },
                            "showUTCTime": false,
                            "grain": 2
                          }
                        }
                      },
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "wlg_allocation_relative_to_system_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Workload group allocation by system percent"
                              }
                            }
                          ],
                          "title": "Workload Group Allocation",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 1,
                            "colorMap": {
                              "staticrc40": "#7e0039"
                            },
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          },
                          "grouping": {
                            "dimension": "WorkloadGroupName",
                            "sort": 2,
                            "top": 20
                          }
                        }
                      }
                    }
                  }
                }
              },
              "4": {
                "position": {
                  "x": 0,
                  "y": 11,
                  "colSpan": 25,
                  "rowSpan": 9
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": {
                        "SubscriptionId": "[parameters('LASubscriptionID')]",
                        "ResourceGroup": "[parameters('LAResourceGroup')]",
                        "Name": "[parameters('LAWorkspaceName')]",
                        "ResourceId": "[resourceId(parameters('LASubscriptionID'),parameters('LAResourceGroup'), 'microsoft.operationalinsights/workspaces', parameters('LAWorkspaceName'))]"
						
                      },
                      "isOptional": true
                    },
                    {
                      "name": "Dimensions",
                      "isOptional": true
                    },
                    {
                      "name": "Query",
                      "value": "[concat('let databaseName = ''', parameters('poolDatabaseName_AllCaps') ,''';\n//Long-Running Queries - Just Actual Queries\n//If ''Command'' is empty - you need to set a bigger time window, the older record with the command is outside of your window\nAzureDiagnostics\n| where Category  == ''ExecRequests''\n| where Resource  == databaseName\n| where StatementType_s !in (''Batch'',''Execute'')\n| summarize Session_ID=any(SessionId_s),\n    Request_ID=any(RequestId_s),\n    Submit_Time=max(SubmitTime_t),\n    Start_Time=max(StartTime_t),\n    End_Time=max(EndTime_t),\n    Command=any(Command_s),\n    Status=min(Status_s), //This works because Completed/Failed/Cancelled are all below running, below suspended. This happens to work out where the min is the current status\n    Statement_Type=any(StatementType_s),\n    Resource_class=any(ResourceClass_s)\n    by RequestId_s\n| summarize ElapsedTime_min=anyif((End_Time - Start_Time)/1m,Start_Time > ago(30d)),Session_ID=any(Session_ID), Submit_Time=any(Submit_Time) ,Start_Time=any(Start_Time), End_Time=any(End_Time),Command=any(Command),Status=any(Status),Statement_Type=any(Statement_Type),Resource_class=any(Resource_class) by Request_ID\n| order by ElapsedTime_min desc\n| limit 20\n\n/////////////////////////////////////////////////////////////////\n// Uncomment these sections to investigate further             //\n// To comment lines in bulk - select multiple lines and press  //\n// Uncomment block: ctrl+k then ctrl+u                         //\n// Comment block:   ctrl+k then ctrl+c                         //\n/////////////////////////////////////////////////////////////////\n\n// //Get Query Text snippet\n// AzureDiagnostics\n// | where Category  == ''ExecRequests''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Put your QueryID here\n// | order by TimeGenerated asc\n// | project TimeGenerated,SubmitTime_t,EndCompileTime_t,StartTime_t,EndTime_t,StatementType_s,ResourceClass_s,SessionId_s,RequestId_s,RootQueryId_s,Command_s,Status_s\n\n// //View the query steps with rowcounts\n// AzureDiagnostics\n// | where Category  == ''RequestSteps''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Put your QueryID here\n// | where Status_s != ''Running''\n// | summarize max(StartTime_t),max(EndTime_t),max(RequestId_s),max(OperationType_s),max(RowCount_d),max(Command_s),max(Status_s) by StepIndex_d\n// | order by StepIndex_d asc')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartTitle",
                      "value": "Analytics",
                      "isOptional": true
                    },
                    {
                      "name": "PartSubTitle",
                      "value": "[parameters('LAWorkspaceName')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartId",
                      "value": "13ed7be7-4bad-4cf5-9c86-a3f36409eb6b",
                      "isOptional": true
                    },
                    {
                      "name": "Version",
                      "value": "1.0",
                      "isOptional": true
                    },
                    {
                      "name": "resourceTypeMode",
                      "value": "workspace",
                      "isOptional": true
                    },
                    {
                      "name": "TimeRange",
                      "value": "P1D",
                      "isOptional": true
                    },
                    {
                      "name": "DashboardId",
                      "isOptional": true
                    },
                    {
                      "name": "ControlType",
                      "value": "AnalyticsGrid",
                      "isOptional": true
                    },
                    {
                      "name": "SpecificChart",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsPart",
                  "settings": {
                    "content": {
                      "PartTitle": "20 Longest Execution Time queries (completed)",
                      "PartSubTitle": "[parameters('LAWorkspaceName')]",
                      "Query": "[concat('let databaseName = ''', parameters('poolDatabaseName_AllCaps') ,''';\n//Long-Running Queries - Just Actual Queries\n//If ''Command'' is empty - you need to set a bigger time window, the older record with the command is outside of your window\nAzureDiagnostics\n| where Category  == ''ExecRequests''\n| where Resource  == databaseName\n| where StatementType_s !in (''Batch'',''Execute'')\n| summarize Session_ID=any(SessionId_s),\n    Request_ID=any(RequestId_s),\n    Submit_Time=max(SubmitTime_t),\n    Start_Time=max(StartTime_t),\n    End_Time=max(EndTime_t),\n    Command=any(Command_s),\n    Status=min(Status_s), //This works because Completed/Failed/Cancelled are all below running, below suspended. This happens to work out where the min is the current status\n    Statement_Type=any(StatementType_s),\n    Resource_class=any(ResourceClass_s)\n    by RequestId_s\n| summarize ElapsedTime_min=anyif((End_Time - Start_Time)/1m,Start_Time > ago(30d)),Session_ID=any(Session_ID), Submit_Time=any(Submit_Time) ,Start_Time=any(Start_Time), End_Time=any(End_Time),Command=any(Command),Status=any(Status),Statement_Type=any(Statement_Type),Resource_class=any(Resource_class) by Request_ID\n| order by ElapsedTime_min desc\n| limit 20\n\n/////////////////////////////////////////////////////////////////\n// Uncomment these sections to investigate further             //\n// To comment lines in bulk - select multiple lines and press  //\n// Uncomment block: ctrl+k then ctrl+u                         //\n// Comment block:   ctrl+k then ctrl+c                         //\n/////////////////////////////////////////////////////////////////\n\n// //Get Query Text snippet\n// AzureDiagnostics\n// | where Category  == ''ExecRequests''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Put your QueryID here\n// | order by TimeGenerated asc\n// | project TimeGenerated,SubmitTime_t,EndCompileTime_t,StartTime_t,EndTime_t,StatementType_s,ResourceClass_s,SessionId_s,RequestId_s,RootQueryId_s,Command_s,Status_s\n\n// //View the query steps with rowcounts\n// AzureDiagnostics\n// | where Category  == ''RequestSteps''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Put your QueryID here\n// | where Status_s != ''Running''\n// | summarize max(StartTime_t),max(EndTime_t),max(RequestId_s),max(OperationType_s),max(RowCount_d),max(Command_s),max(Status_s) by StepIndex_d\n// | order by StepIndex_d asc')]",
                      "GridColumnsWidth": {
                        "Command": "804px"
                      }
                    }
                  }
                }
              },
              "5": {
                "position": {
                  "x": 0,
                  "y": 21,
                  "colSpan": 12,
                  "rowSpan": 9
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": {
                        "SubscriptionId": "[parameters('LASubscriptionID')]",
                        "ResourceGroup": "[parameters('LAResourceGroup')]",
                        "Name": "[parameters('LAWorkspaceName')]",
                        "ResourceId": "[resourceId(parameters('LASubscriptionID'), parameters('LAResourceGroup'), 'microsoft.operationalinsights/workspaces', parameters('LAWorkspaceName'))]"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "Dimensions",
                      "isOptional": true
                    },
                    {
                      "name": "Query",
                      "value": "[concat('//Most rows moved Steps\nAzureDiagnostics\n| where Category  == ''RequestSteps''\n| where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n| extend elapsedTime = EndTime_t - StartTime_t\n| extend elapsedTime_hr = elapsedTime/1h\n| where EndTime_t > ago(7d)\n| where StartTime_t > ago(7d)\n| order by RowCount_d desc\n| project RequestId_s,OperationType_s, RowCount_d,elapsedTime_hr, StartTime_t, EndTime_t, Category, Status_s\n| limit 20\n\n/////////////////////////////////////////////////////////////\n// Uncomment these sections to investigate further         //\n// To comment lines in bulk - select multiple lines and press  //\n// Uncomment block: ctrl+k then ctrl+u                     //\n// Comment block:   ctrl+k then ctrl+c                     //\n/////////////////////////////////////////////////////////////\n\n// //Get Query Text snippet\n// AzureDiagnostics\n// | where Category  == ''ExecRequests''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Insert your QID here\n// | order by TimeGenerated asc\n// | project TimeGenerated,SubmitTime_t,EndCompileTime_t,StartTime_t,EndTime_t,StatementType_s,ResourceClass_s,SessionId_s,RequestId_s,RootQueryId_s,Command_s,Status_s\n\n// //View the query steps with rowcounts\n// AzureDiagnostics\n// | where Category  == ''RequestSteps''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Insert your QID here\n// | where Status_s != ''Running''\n// | summarize max(StartTime_t),max(EndTime_t),max(RequestId_s),max(OperationType_s),max(RowCount_d),max(Command_s),max(Status_s) by StepIndex_d\n// | order by StepIndex_d asc\n\n\n\n\n\n')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartTitle",
                      "value": "Analytics",
                      "isOptional": true
                    },
                    {
                      "name": "PartSubTitle",
                      "value": "[parameters('LAWorkspaceName')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartId",
                      "value": "1045e337-34ef-41da-b814-a650da413a79",
                      "isOptional": true
                    },
                    {
                      "name": "Version",
                      "value": "1.0",
                      "isOptional": true
                    },
                    {
                      "name": "resourceTypeMode",
                      "value": "workspace",
                      "isOptional": true
                    },
                    {
                      "name": "TimeRange",
                      "value": "P1D",
                      "isOptional": true
                    },
                    {
                      "name": "DashboardId",
                      "isOptional": true
                    },
                    {
                      "name": "ControlType",
                      "value": "AnalyticsGrid",
                      "isOptional": true
                    },
                    {
                      "name": "SpecificChart",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsPart",
                  "settings": {
                    "content": {
                      "PartTitle": "Most Data Movement by Query Step",
                      "PartSubTitle": "[parameters('LAWorkspaceName')]",
                      "Query": "[concat('//Most rows moved Steps\nAzureDiagnostics\n| where Category  == ''RequestSteps''\n| where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n| extend elapsedTime = EndTime_t - StartTime_t\n| extend elapsedTime_min = elapsedTime/1m\n| where EndTime_t > ago(7d)\n| where StartTime_t > ago(7d)\n| order by RowCount_d desc\n| project RequestId_s,OperationType_s, RowCount_d,elapsedTime_min , StartTime_t, EndTime_t, Status_s\n| limit 20\n\n/////////////////////////////////////////////////////////////\n// Uncomment these sections to investigate further         //\n// To comment lines in bulk - select multiple lines and press  //\n// Uncomment block: ctrl+k then ctrl+u                     //\n// Comment block:   ctrl+k then ctrl+c                     //\n/////////////////////////////////////////////////////////////\n\n// //Get Query Text snippet\n// AzureDiagnostics\n// | where Category  == ''ExecRequests''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Insert your QID here\n// | order by TimeGenerated asc\n// | project TimeGenerated,SubmitTime_t,EndCompileTime_t,StartTime_t,EndTime_t,StatementType_s,ResourceClass_s,SessionId_s,RequestId_s,RootQueryId_s,Command_s,Status_s\n\n// //View the query steps with rowcounts\n// AzureDiagnostics\n// | where Category  == ''RequestSteps''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Insert your QID here\n// | where Status_s != ''Running''\n// | summarize max(StartTime_t),max(EndTime_t),max(RequestId_s),max(OperationType_s),max(RowCount_d),max(Command_s),max(Status_s) by StepIndex_d\n// | order by StepIndex_d asc\n\n\n\n\n\n')]",
                      "GridColumnsWidth": {
                        "OperationType_s": "210px",
                        "RequestId_s": "121px",
                        "RowCount_d": "126px",
                        "elapsedTime_hr": "134px",
                        "Category": "132px"
                      }
                    }
                  }
                }
              },
              "6": {
                "position": {
                  "x": 12,
                  "y": 21,
                  "colSpan": 14,
                  "rowSpan": 9
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": {
                        "SubscriptionId": "[parameters('LASubscriptionID')]",
                        "ResourceGroup": "[parameters('LAResourceGroup')]",
                        "Name": "[parameters('LAWorkspaceName')]",
                        "ResourceId": "[resourceId(parameters('LASubscriptionID'),parameters('LAResourceGroup'), 'microsoft.operationalinsights/workspaces', parameters('LAWorkspaceName'))]"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "Dimensions",
                      "value": {
                        "xAxis": {
                          "name": "RequestId_s",
                          "type": "string"
                        },
                        "yAxis": [
                          {
                            "name": "RowCount_d",
                            "type": "real"
                          }
                        ],
                        "splitBy": [
                          {
                            "name": "OperationType_s",
                            "type": "string"
                          }
                        ],
                        "aggregation": "Sum"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "Query",
                      "value": "[concat('//Most rows moved Steps\nAzureDiagnostics \n| where Category  == ''RequestSteps''\n| where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n| extend elapsedTime = EndTime_t - StartTime_t\n| extend elapsedTime_hr = elapsedTime/1h\n| where EndTime_t > ago(3d)\n| where StartTime_t > ago(3d)\n| order by RowCount_d desc\n| project RequestId_s,OperationType_s, RowCount_d,elapsedTime_hr, StartTime_t, EndTime_t, Category, Status_s\n| limit 30\n')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartTitle",
                      "value": "Analytics",
                      "isOptional": true
                    },
                    {
                      "name": "PartSubTitle",
                      "value": "[parameters('LAWorkspaceName')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartId",
                      "value": "5f3d4e10-4eb5-47a0-8612-a17d17115920",
                      "isOptional": true
                    },
                    {
                      "name": "Version",
                      "value": "1.0",
                      "isOptional": true
                    },
                    {
                      "name": "resourceTypeMode",
                      "value": "workspace",
                      "isOptional": true
                    },
                    {
                      "name": "TimeRange",
                      "value": "2020-10-07T11:55:06.795Z/2020-10-07T12:02:26.489Z",
                      "isOptional": true
                    },
                    {
                      "name": "DashboardId",
                      "isOptional": true
                    },
                    {
                      "name": "ControlType",
                      "value": "FrameControlChart",
                      "isOptional": true
                    },
                    {
                      "name": "SpecificChart",
                      "value": "StackedColumn",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsPart",
                  "settings": {
                    "content": {
                      "PartTitle": "Most Data Movement by Query",
                      "PartSubTitle": "[parameters('LAWorkspaceName')]",
                      "Query": "[concat('//Most rows moved Steps\nAzureDiagnostics \n| where Category  == ''RequestSteps''\n| where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n| extend elapsedTime = EndTime_t - StartTime_t\n| extend elapsedTime_hr = elapsedTime/1h\n| where EndTime_t > ago(7d)\n| where StartTime_t > ago(7d)\n| order by RowCount_d desc\n| project RequestId_s,OperationType_s, RowCount_d,elapsedTime_hr, StartTime_t, EndTime_t, Category, Status_s\n| limit 20\n')]"
                    }
                  }
                }
              },
              "7": {
                "position": {
                  "x": 5,
                  "y": 30,
                  "colSpan": 21,
                  "rowSpan": 6
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": {
                        "SubscriptionId": "[parameters('LASubscriptionID')]",
                        "ResourceGroup": "[parameters('LAResourceGroup')]",
                        "Name": "[parameters('LAWorkspaceName')]",
                        "ResourceId": "[resourceId(parameters('LASubscriptionID'),parameters('LAResourceGroup'), 'microsoft.operationalinsights/workspaces', parameters('LAWorkspaceName'))]"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "Dimensions",
                      "value": {
                        "xAxis": {
                          "name": "TimeGenerated",
                          "type": "datetime"
                        },
                        "yAxis": [
                          {
                            "name": "Rows_Processed",
                            "type": "real"
                          }
                        ],
                        "splitBy": [],
                        "aggregation": "Sum"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "Query",
                      "value": "[concat('let databaseName = ''', parameters('poolDatabaseName_AllCaps') ,''';\r\n//rows processed \r\nAzureDiagnostics\r\n| where Category  == ''RequestSteps''\r\n| where Resource  == databaseName\r\n| where RowCount_d > 0\r\n| summarize Rows_Processed=sum(RowCount_d) by bin(TimeGenerated, 1hr)\r\n| limit 50\r\n')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartTitle",
                      "value": "Analytics",
                      "isOptional": true
                    },
                    {
                      "name": "PartSubTitle",
                      "value": "[parameters('LAWorkspaceName')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartId",
                      "value": "14e7ed11-01f3-4496-9f13-8c8a01118f18",
                      "isOptional": true
                    },
                    {
                      "name": "Version",
                      "value": "1.0",
                      "isOptional": true
                    },
                    {
                      "name": "resourceTypeMode",
                      "value": "workspace",
                      "isOptional": true
                    },
                    {
                      "name": "TimeRange",
                      "value": "P1D",
                      "isOptional": true
                    },
                    {
                      "name": "DashboardId",
                      "isOptional": true
                    },
                    {
                      "name": "ControlType",
                      "value": "FrameControlChart",
                      "isOptional": true
                    },
                    {
                      "name": "SpecificChart",
                      "value": "Line",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsPart",
                  "settings": {
                    "content": {
                      "PartTitle": "Rows Processed Per Hour",
                      "PartSubTitle": "[parameters('LAWorkspaceName')]"
                    }
                  }
                }
              },
              "8": {
                "position": {
                  "x": 0,
                  "y": 31,
                  "colSpan": 5,
                  "rowSpan": 2
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "This chart shows how many rows were moved by data movement overall per hour for the time window selected on the dashboard. This metric can be used as a supplemental metric to determine what times the database is under heavy load. \n",
                        "title": "Rows Processed Per Hour",
                        "subtitle": "",
                        "markdownSource": 1,
                        "markdownUri": null
                      }
                    }
                  }
                }
              },
              "9": {
                "position": {
                  "x": 0,
                  "y": 37,
                  "colSpan": 9,
                  "rowSpan": 3
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "__BuildReplicatedTableCache Execution Time__\n\nThe operation 'BuildReplicatedTableCache' Should execute in the seconds to minutes range. Anything that takes multiple minutes may need to be re-evaluated whether or not that should be a replicated table. \n\nTo make this decision you can run:\nDBCC PDW_SHOWSPACEUSED(\"Schema.Table\") \nYou can add up the rowcount and Reserved space to see how many rows and how much space it is using. In geneeral replicated tables should be under 2GB. \n\nAlso See:\n <a href='https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/design-guidance-for-replicated-tables' target='_blank'>Design Guidance For Replicated Tables</a>\n",
                        "title": "",
                        "subtitle": "",
                        "markdownSource": 1,
                        "markdownUri": null
                      }
                    }
                  }
                }
              },
              "10": {
                "position": {
                  "x": 0,
                  "y": 40,
                  "colSpan": 9,
                  "rowSpan": 7
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": {
                        "SubscriptionId": "[parameters('LASubscriptionID')]",
                        "ResourceGroup": "[parameters('LAResourceGroup')]",
                        "Name": "[parameters('LAWorkspaceName')]",
                        "ResourceId": "[resourceId(parameters('LASubscriptionID'),parameters('LAResourceGroup'), 'microsoft.operationalinsights/workspaces', parameters('LAWorkspaceName'))]"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "Dimensions",
                      "value": {
                        "xAxis": {
                          "name": "Request_ID",
                          "type": "string"
                        },
                        "yAxis": [
                          {
                            "name": "Elapsed_Minutes",
                            "type": "real"
                          }
                        ],
                        "splitBy": [],
                        "aggregation": "Sum"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "Query",
                      "value": "[concat('//Long-Running Queries - Just Actual Queries\nAzureDiagnostics\n| where Category  == ''ExecRequests''\n| where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n| where StatementType_s !in (''Batch'',''Execute'')\n| summarize Session_ID=max(SessionId_s),      Request_ID=max(RequestId_s),      Submit_Time=max(SubmitTime_t),      Start_Time=max(StartTime_t),      End_Time=max(EndTime_t),      Command=max(Command_s),       Statement_Type=max(StatementType_s),     Resource_class=max(ResourceClass_s)      by RequestId_s\n| join kind= inner\n(\n    AzureDiagnostics\n    | where Category  == ''ExecRequests''\n    | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n    //| where StatementType_s !in (''Batch'',''Execute'')\n    | where StatementType_s == ''BuildReplicatedTableCache''\n    | where EndTime_t > ago(7d)\n    | where StartTime_t > ago(7d)\n    | extend elapsedTime = EndTime_t - StartTime_t\n    | extend elapsedTime_min = elapsedTime/1m\n    | order by elapsedTime_min desc\n    | project Request_ID=RequestId_s,elapsedTime_min\n)\non Request_ID\n| order by elapsedTime_min desc\n| project Session_ID,Request_ID,Submit_Time,Start_Time,End_Time,Elapsed_Minutes=elapsedTime_min,Statement_Type,Command\n| limit 10\n\n/////////////////////////////////////////////////////////////////\n// Uncomment these sections to investigate further             //\n// To comment lines in bulk - select multiple lines and press  //\n// Uncomment block: ctrl+k then ctrl+u                         //\n// Comment block:   ctrl+k then ctrl+c                         //\n/////////////////////////////////////////////////////////////////\n\n\n\n// //Get Query Text snippet\n// AzureDiagnostics\n// | where Category  == ''ExecRequests''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Put your QueryID here\n// | order by TimeGenerated asc\n// | project TimeGenerated,SubmitTime_t,EndCompileTime_t,StartTime_t,EndTime_t,StatementType_s,ResourceClass_s,SessionId_s,RequestId_s,RootQueryId_s,Command_s,Status_s\n\n\n\n// //View the query steps with rowcounts\n// AzureDiagnostics\n// | where Category  == ''RequestSteps''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Put your QueryID here\n// | where Status_s != ''Running''\n// | summarize max(StartTime_t),max(EndTime_t),max(RequestId_s),max(OperationType_s),max(RowCount_d),max(Command_s),max(Status_s) by StepIndex_d\n// | order by StepIndex_d asc\n')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartTitle",
                      "value": "Analytics",
                      "isOptional": true
                    },
                    {
                      "name": "PartSubTitle",
                      "value": "[parameters('LAWorkspaceName')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartId",
                      "value": "000b9dfb-ba12-4d3f-9301-6c9dc12b0780",
                      "isOptional": true
                    },
                    {
                      "name": "Version",
                      "value": "1.0",
                      "isOptional": true
                    },
                    {
                      "name": "resourceTypeMode",
                      "value": "workspace",
                      "isOptional": true
                    },
                    {
                      "name": "TimeRange",
                      "value": "P3D",
                      "isOptional": true
                    },
                    {
                      "name": "DashboardId",
                      "isOptional": true
                    },
                    {
                      "name": "ControlType",
                      "value": "FrameControlChart",
                      "isOptional": true
                    },
                    {
                      "name": "SpecificChart",
                      "value": "StackedColumn",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsPart",
                  "settings": {
                    "content": {
                      "PartTitle": "Longest BuildReplicatedTableCache",
                      "PartSubTitle": "[parameters('LAWorkspaceName')]"
                    }
                  }
                }
              },
              "11": {
                "position": {
                  "x": 9,
                  "y": 40,
                  "colSpan": 17,
                  "rowSpan": 7
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": {
                        "SubscriptionId": "[parameters('LASubscriptionID')]",
                        "ResourceGroup": "[parameters('LAResourceGroup')]",
                        "Name": "[parameters('LAWorkspaceName')]",
                        "ResourceId": "[resourceId(parameters('LASubscriptionID'),parameters('LAResourceGroup'), 'microsoft.operationalinsights/workspaces', parameters('LAWorkspaceName'))]"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "Dimensions",
                      "isOptional": true
                    },
                    {
                      "name": "Query",
                      "value": "[concat('//Long-Running Queries - Just Actual Queries\nAzureDiagnostics\n| where Category  == ''ExecRequests''\n| where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n| where StatementType_s !in (''Batch'',''Execute'')\n| summarize Session_ID=max(SessionId_s),      Request_ID=max(RequestId_s),      Submit_Time=max(SubmitTime_t),      Start_Time=max(StartTime_t),      End_Time=max(EndTime_t),      Command=max(Command_s),       Statement_Type=max(StatementType_s),     Resource_class=max(ResourceClass_s)      by RequestId_s\n| join kind= inner\n(\n    AzureDiagnostics\n    | where Category  == ''ExecRequests''\n    | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n    //| where StatementType_s !in (''Batch'',''Execute'')\n    | where StatementType_s == ''BuildReplicatedTableCache''\n    | where EndTime_t > ago(7d)\n    | where StartTime_t > ago(7d)\n    | extend elapsedTime = EndTime_t - StartTime_t\n    | extend elapsedTime_hr = elapsedTime/1h\n    | order by elapsedTime_hr desc\n    | project Request_ID=RequestId_s,elapsedTime_hr\n)\non Request_ID\n| order by elapsedTime_hr desc\n| project Session_ID,Request_ID,Submit_Time,Start_Time,End_Time,Elapsed_Time=elapsedTime_hr,Command\n| limit 10\n\n/////////////////////////////////////////////////////////////////\n// Uncomment these sections to investigate further             //\n// To comment lines in bulk - select multiple lines and press  //\n// Uncomment block: ctrl+k then ctrl+u                         //\n// Comment block:   ctrl+k then ctrl+c                         //\n/////////////////////////////////////////////////////////////////\n\n\n\n// //Get Query Text snippet\n// AzureDiagnostics\n// | where Category  == ''ExecRequests''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Put your QueryID here\n// | order by TimeGenerated asc\n// | project TimeGenerated,SubmitTime_t,EndCompileTime_t,StartTime_t,EndTime_t,StatementType_s,ResourceClass_s,SessionId_s,RequestId_s,RootQueryId_s,Command_s,Status_s\n\n\n\n// //View the query steps with rowcounts\n// AzureDiagnostics\n// | where Category  == ''RequestSteps''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Put your QueryID here\n// | where Status_s != ''Running''\n// | summarize max(StartTime_t),max(EndTime_t),max(RequestId_s),max(OperationType_s),max(RowCount_d),max(Command_s),max(Status_s) by StepIndex_d\n// | order by StepIndex_d asc\n')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartTitle",
                      "value": "Analytics",
                      "isOptional": true
                    },
                    {
                      "name": "PartSubTitle",
                      "value": "[parameters('LAWorkspaceName')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartId",
                      "value": "102f2074-6084-4219-ba1e-7bcedf726fa0",
                      "isOptional": true
                    },
                    {
                      "name": "Version",
                      "value": "1.0",
                      "isOptional": true
                    },
                    {
                      "name": "resourceTypeMode",
                      "value": "workspace",
                      "isOptional": true
                    },
                    {
                      "name": "TimeRange",
                      "value": "P1D",
                      "isOptional": true
                    },
                    {
                      "name": "DashboardId",
                      "isOptional": true
                    },
                    {
                      "name": "ControlType",
                      "value": "AnalyticsGrid",
                      "isOptional": true
                    },
                    {
                      "name": "SpecificChart",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsPart",
                  "settings": {
                    "content": {
                      "PartTitle": "Longest BuildReplicatedTableCache",
                      "PartSubTitle": "[parameters('LAWorkspaceName')]",
                      "Query": "[concat('//Long-Running Queries - Just Actual Queries\nAzureDiagnostics\n| where Category  == ''ExecRequests''\n| where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n| where StatementType_s !in (''Batch'',''Execute'')\n| summarize Session_ID=max(SessionId_s),      Request_ID=max(RequestId_s),      Submit_Time=max(SubmitTime_t),      Start_Time=max(StartTime_t),      End_Time=max(EndTime_t),      Command=max(Command_s),       Statement_Type=max(StatementType_s),     Resource_class=max(ResourceClass_s)      by RequestId_s\n| join kind= inner\n(\n    AzureDiagnostics\n    | where Category  == ''ExecRequests''\n    | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n    //| where StatementType_s !in (''Batch'',''Execute'')\n    | where StatementType_s == ''BuildReplicatedTableCache''\n    | where EndTime_t > ago(7d)\n    | where StartTime_t > ago(7d)\n    | extend elapsedTime_min = (EndTime_t - StartTime_t)/1m\n    //| extend elapsedTime_min = elapsedTime/1m\n    | order by elapsedTime_min desc\n    | project Request_ID=RequestId_s,elapsedTime_min \n)\non Request_ID\n| order by elapsedTime_min desc\n| project Request_ID,Submit_Time,Start_Time,End_Time,Elapsed_Time=elapsedTime_min ,Command\n| limit 10\n\n/////////////////////////////////////////////////////////////////\n// Uncomment these sections to investigate further             //\n// To comment lines in bulk - select multiple lines and press  //\n// Uncomment block: ctrl+k then ctrl+u                         //\n// Comment block:   ctrl+k then ctrl+c                         //\n/////////////////////////////////////////////////////////////////\n\n\n\n// //Get Query Text snippet\n// AzureDiagnostics\n// | where Category  == ''ExecRequests''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Put your QueryID here\n// | order by TimeGenerated asc\n// | project TimeGenerated,SubmitTime_t,EndCompileTime_t,StartTime_t,EndTime_t,StatementType_s,ResourceClass_s,SessionId_s,RequestId_s,RootQueryId_s,Command_s,Status_s\n\n\n\n// //View the query steps with rowcounts\n// AzureDiagnostics\n// | where Category  == ''RequestSteps''\n// | where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n// | where RequestId_s == ''QID117009708'' //Put your QueryID here\n// | where Status_s != ''Running''\n// | summarize max(StartTime_t),max(EndTime_t),max(RequestId_s),max(OperationType_s),max(RowCount_d),max(Command_s),max(Status_s) by StepIndex_d\n// | order by StepIndex_d asc\n')]",
                      "GridColumnsWidth": {
                        "Session_ID": "101px",
                        "Request_ID": "115px",
                        "Elapsed_Time": "119px",
                        "Command": "933px",
                        "Submit_Time": "145px"
                      }
                    }
                  }
                }
              },
              "12": {
                "position": {
                  "x": 5,
                  "y": 47,
                  "colSpan": 16,
                  "rowSpan": 9
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": {
                        "SubscriptionId": "[parameters('LASubscriptionID')]",
                        "ResourceGroup": "[parameters('LAResourceGroup')]",
                        "Name": "[parameters('LAWorkspaceName')]",
                        "ResourceId": "[resourceId(parameters('LASubscriptionID'),parameters('LAResourceGroup'), 'microsoft.operationalinsights/workspaces', parameters('LAWorkspaceName'))]"
                      },
                      "isOptional": true
                    },
                    {
                      "name": "Dimensions",
                      "isOptional": true
                    },
                    {
                      "name": "Query",
                      "value": "[concat('//Build cache count by day\r\nAzureDiagnostics\r\n| where Category  == ''ExecRequests''\r\n| where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\r\n| where StatementType_s == ''BuildReplicatedTableCache''\r\n| where Command_s != \"\"\r\n| where ResourceClass_s != \"\"\r\n| project Command_s,TimeGenerated,RequestId_s\r\n| summarize LastRebuild=max(TimeGenerated),RebuildCount_7Days=count(RequestId_s), AvgRebuildsPerDay=count(RequestId_s)/7 by Command_s\r\n| order by RebuildCount_7Days desc\r\n')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartTitle",
                      "value": "Analytics",
                      "isOptional": true
                    },
                    {
                      "name": "PartSubTitle",
                      "value": "[parameters('LAWorkspaceName')]",
                      "isOptional": true
                    },
                    {
                      "name": "PartId",
                      "value": "1094f19a-155e-4fda-8901-3e7c395d62f6",
                      "isOptional": true
                    },
                    {
                      "name": "Version",
                      "value": "1.0",
                      "isOptional": true
                    },
                    {
                      "name": "resourceTypeMode",
                      "value": "workspace",
                      "isOptional": true
                    },
                    {
                      "name": "TimeRange",
                      "value": "P7D",
                      "isOptional": true
                    },
                    {
                      "name": "DashboardId",
                      "isOptional": true
                    },
                    {
                      "name": "ControlType",
                      "value": "AnalyticsGrid",
                      "isOptional": true
                    },
                    {
                      "name": "SpecificChart",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsPart",
                  "settings": {
                    "content": {
                      "PartTitle": "Most Replicated Table Rebuilds - 7 Days",
                      "PartSubTitle": "[parameters('LAWorkspaceName')]",
                      "Query": "[concat('//Build cache count by day\nAzureDiagnostics\n| where Category  == ''ExecRequests''\n| where Resource  == ''', parameters('poolDatabaseName_AllCaps') ,'''\n| where StatementType_s == ''BuildReplicatedTableCache''\n| where Command_s != \"\"\n| where ResourceClass_s != \"\"\n| project Command_s,TimeGenerated,RequestId_s\n| summarize LastRebuild=max(TimeGenerated),RebuildCount_7Days=count(RequestId_s), AvgRebuildsPerDay=count(RequestId_s)/7 by Command_s\n| order by RebuildCount_7Days desc\n| limit 20')]",
                      "GridColumnsWidth": {
                        "Command_s": "857px"
                      }
                    }
                  },
                  "filters": {
                    "MsPortalFx_TimeRange": {
                      "model": {
                        "format": "local",
                        "granularity": "auto",
                        "relative": "7d"
                      }
                    }
                  }
                }
              },
              "13": {
                "position": {
                  "x": 0,
                  "y": 48,
                  "colSpan": 5,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "__BuildReplicatedTableCache Execution Frequency__\n\nEvery time there is an INSER/UPDATE/DELETE operation to a replicated table the cache is invalidated and it will be rebuilt next time it is queried. The more often it is rebuilt the less you benefit from use of the cached copy. This shoudl be evaluated on a case-by-case basis. For instance, consider a table that is rebuilt 10 times a day, but it is queried 100 times per day. Most of those queries are still benefiting from teh cached copy. Another instance where a talbe is rebuild 10 times a day, but only queried 10 times a day you are probably not benefiting from the table being replicated. \n\nAlso See:  <a href='https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/design-guidance-for-replicated-tables' target='_blank'>Design Guidance For Replicated Tables</a>\n",
                        "title": "",
                        "subtitle": "",
                        "markdownSource": 1,
                        "markdownUri": null
                      }
                    }
                  }
                }
              },
              "14": {
                "position": {
                  "x": 0,
                  "y": 57,
                  "colSpan": 6,
                  "rowSpan": 5
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "The Adaptive Cache caches recently used columnstore segments so that when they are queried again they do not need to access remote storage. \n\nYou want your Cache Hit percentage as close to 100% as you can get, ideally over 95%. There are a number of reasons cache hit percentage may be low. \n1. Scale operations empty the cache and it must build up again over time\n2. Your workload cannot fit into the cache at the current SLO. This would be the case if Used % is at 100%. Scale up for more cache. \n\nIf your cache hit % is high, but used percentage is low, it means that if you scale down you are not likely to be impacted by lack of cache size. \n\nAlso See: <a href='https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/sql-data-warehouse-how-to-monitor-cache#cache-hit-and-used-percentage' target='_blank'>Understanding Adaptive Cache Metrics</a> \n",
                        "title": "Adaptive Cache Hit vs Used %",
                        "subtitle": "",
                        "markdownSource": 1,
                        "markdownUri": null
                      }
                    }
                  }
                }
              },
              "15": {
                "position": {
                  "x": 6,
                  "y": 57,
                  "colSpan": 20,
                  "rowSpan": 5
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    },
                    {
                      "name": "options",
                      "value": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                               "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "cache_hit_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Cache hit percentage"
                              }
                            },
                            {
                              "resourceMetadata": {
                               "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "cache_used_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Cache used percentage"
                              }
                            }
                          ],
                          "title": "Adaptive Cache Hit vs Used %",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            }
                          },
                          "timespan": {
                            "relative": {
                              "duration": 86400000
                            },
                            "showUTCTime": false,
                            "grain": 1
                          }
                        }
                      },
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                               "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "cache_hit_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Cache hit percentage"
                              }
                            },
                            {
                              "resourceMetadata": {
                               "id": "[resourceId(parameters('poolSubscriptionID'), parameters('poolResourceGroup'), 'Microsoft.Sql/servers/databases', parameters('poolServerName'), parameters('poolDatabaseName_AllCaps'))]"
                              },
                              "name": "cache_used_percent",
                              "aggregationType": 3,
                              "namespace": "microsoft.sql/servers/databases",
                              "metricVisualization": {
                                "displayName": "Cache used percentage"
                              }
                            }
                          ],
                          "title": "Adaptive Cache Hit vs Used %",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "metadata": {
          "model": {
            "timeRange": {
              "value": {
                "relative": {
                  "duration": 24,
                  "timeUnit": 1
                }
              },
              "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
            },
            "filterLocale": {
              "value": "en-us"
            },
            "filters": {
              "value": {
                "MsPortalFx_TimeRange": {
                  "model": {
                    "format": "local",
                    "granularity": "auto",
                    "relative": "4h"
                  },
                  "displayCache": {
                    "name": "Local Time",
                    "value": "Past 4 hours"
                  },
                  "filteredPartIds": [
                    "StartboardPart-MonitorChartPart-57021b84-601b-4e62-86f4-53ff2c289540",
                    "StartboardPart-MonitorChartPart-57021b84-601b-4e62-86f4-53ff2c289542",
                    "StartboardPart-MonitorChartPart-57021b84-601b-4e62-86f4-53ff2c289544",
                    "StartboardPart-MonitorChartPart-57021b84-601b-4e62-86f4-53ff2c289546",
                    "StartboardPart-AnalyticsPart-57021b84-601b-4e62-86f4-53ff2c289548",
                    "StartboardPart-AnalyticsPart-57021b84-601b-4e62-86f4-53ff2c28954a",
                    "StartboardPart-AnalyticsPart-57021b84-601b-4e62-86f4-53ff2c28954c",
                    "StartboardPart-AnalyticsPart-57021b84-601b-4e62-86f4-53ff2c28954e",
                    "StartboardPart-AnalyticsPart-57021b84-601b-4e62-86f4-53ff2c289554",
                    "StartboardPart-AnalyticsPart-57021b84-601b-4e62-86f4-53ff2c289556",
                    "StartboardPart-AnalyticsPart-57021b84-601b-4e62-86f4-53ff2c289558",
                    "StartboardPart-MonitorChartPart-57021b84-601b-4e62-86f4-53ff2c28955e"
                  ]
                }
              }
            }
          }
        }
      },
      "name": "[parameters('dashboardName')]",
      "type": "Microsoft.Portal/dashboards",
      "location": "[parameters('region')]",
      "tags": {
        "hidden-title": "[parameters('dashboardName')]"
      },
      "apiVersion": "2015-08-01-preview"
    }
  ]
}